package application.network;

import game.entity.CardEntity;
import game.entity.CardSlotEntity;
import game.entity.Entity;
import game.entity.PlayerEntity;
import game.type.LinkedType;
import game.type.Type;

public abstract class EntityUpdate {
	public int id,parentId,containerId;
	public String name;
	public String type;
	
	public void update(Entity entity)
	{
		entity.name = name;
		entity.type = new LinkedType(type,Type.BASE_TYPE);
		entity.setParent(Entity.list.get(parentId));
	}
	
	public EntityUpdate(Entity entity)
	{
		id = entity.id;
		parentId = ((Entity)entity.parent()).id;
		name = entity.name;
		type = entity.type.fullName().substring(5);
	}
	
	public static EntityUpdate getUpdate(Entity entity)
	{
		if(entity instanceof CardEntity)
			return new CardEntityUpdate((CardEntity) entity);
		else if(entity instanceof CardSlotEntity)
			return new CardSlotEntityUpdate((CardSlotEntity) entity);
		else if(entity instanceof PlayerEntity)
			return new PlayerEntityUpdate((PlayerEntity) entity);
		
		return null;
	}
	
	public abstract Entity getNewEntity();
	
	public Entity createClientEntity()
	{
		Entity e = getNewEntity();
		this.update(e);
		Entity.list.set(e.id, e);
		return e;
	}
}
