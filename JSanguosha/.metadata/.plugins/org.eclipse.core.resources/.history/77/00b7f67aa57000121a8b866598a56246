package game;

public class Filter {
	private Filter a,b;
	private byte operation = -1;
	
	private Filter(Filter a, Filter b, byte operation)
	{
		this.a = a;
		this.b = b;
		this.operation = operation;
	}
	
	public Filter and(Filter other)
	{
		return new Filter(this,other, (byte) 0);
	}
	
	public Filter or(Filter other)
	{
		return new Filter(this, other, (byte) 1);
	}
	
	public Filter then(Filter other)
	{
		return new Filter(this, other, (byte) 2);
	}
	
	public boolean check(Action action)
	{
		return true;
	}
	
	public boolean checkAll(Action action)
	{
		boolean resultA = false,resultB = false;
		if(a != null) resultA = a.checkAll(action);
		if(b != null) resultB = b.checkAll(action);
		
		switch(operation)
		{
		case 0:
			return resultA && resultB;
		case 1:
			return resultA || resultB;
		case 2:
			return (resultA ? resultB : true);
		default:
			return check(action);
		}
	}
	
	public Filter(){};
}
