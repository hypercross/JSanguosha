package application.network.handlers;

import game.entity.CardEntity;
import game.entity.CardSlotEntity;
import game.entity.Entity;
import game.entity.PlayerEntity;

import com.badlogic.gdx.scenes.scene2d.Stage;

import application.network.EntityDeployRequest;
import application.network.NetworkManager.Side;
import application.view.CardEntityView;
import application.view.EntityViewManager;

public class EntityDeployHandler implements INetworkHandler {

	Stage stage;
	public EntityDeployHandler(Stage stage)
	{
		this.stage = stage;
	}
	
	@Override
	public boolean captured(Object obj) {
		return obj instanceof EntityDeployRequest;
	}

	@Override
	public Object handledWithResponse(Object obj) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void handled(Object obj) {
		EntityDeployRequest edr = (EntityDeployRequest) obj;
		Entity entity = edr.info.createClientEntity();
		
		if(entity instanceof CardEntity)
		{
			CardEntityView cev = new CardEntityView((CardEntity) entity);
			EntityViewManager.instance.addActor(stage, cev, entity);
			cev.setPosition(edr.x, edr.y);
		}else if (entity instanceof CardSlotEntity)
		{
		 
		}else if (entity instanceof PlayerEntity)
		{
		 
		}
	}

	@Override
	public Side side() {
		// TODO Auto-generated method stub
		return null;
	}

}
