package application.network;

import game.PlayerManager;

import java.util.HashMap;

import com.esotericsoftware.kryonet.Connection;
import com.esotericsoftware.kryonet.Listener;

public class NetworkManager {
	public enum Side
	{
		Server,
		Client
	}
	
	Side side;
	
	HashMap <Connection,Integer> connection_to_playerID;
	HashMap <Integer,Connection> playerID_to_connection;
	PlayerManager players;
	
	public NetworkManager(Side side, PlayerManager players)
	{
		this.side = side;
		
		connection_to_playerID = new HashMap <Connection,Integer>();
		playerID_to_connection = new HashMap <Integer,Connection>();
	}
	
	private void register(int id, Connection address)
	{
		connection_to_playerID.put(address,id);
		playerID_to_connection.put(id,address);
	}
	
	private void unregister(int id)
	{
		for(Connection address : connection_to_playerID.keySet())
		{
			if(connection_to_playerID.get(address).equals(id))
			{
				connection_to_playerID.remove(address);
			}
		}
		
		playerID_to_connection.remove(id);
	}
	
	class LoginListener extends Listener
	{
		@Override
		public void received(Connection connection, Object object)
		{
			if(connection_to_playerID.containsKey(connection))return;
			if(object instanceof LoginRequest)
			{
				
			}
		}
	}
}
